# This is a basic workflow to help you get started with Actions

name: Sign APK, Bump Version

# Controls when the action will run.
on:
  # Triggers the workflow to Sign APK and Bump Version on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [bump-version]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1 Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # 2 decode google-services.json
      - name: Decode google-services.json
        env:
          FIREBASE_SECRET_RELEASE: ${{ secrets.FIREBASE_SECRET_RELEASE }}
        run: echo $FIREBASE_SECRET_RELEASE > app/google-services.json
      - name: Download Version Name File
        uses: actions/download-artifact@main
        with:
          name: version-name
      - name: Read Version Name
        run: |
          read -r TEMP_VERSION_NAME < version_name.txt
          echo "VERSION_NAME=$TEMP_VERSION_NAME" >> $GITHUB_ENV
      - name: Bump App version
        id: bump_version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}
          versionName: ${{env.VERSION_NAME}}
      # 3 Generate Release APK
      - name: Generate Release APK
        run: bash ./gradlew clean assembleRelease --stacktrace

      # 4 Sign APK
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      # 5 Upload apk to github action
      - uses: actions/upload-artifact@main
        with:
          name: release.apk
          path: ${{steps.sign_app.outputs.signedReleaseFile}}



  bump-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Version Name file
        run: echo ${{steps.tag_version.outputs.new_tag}} > version_name.txt
      - uses: actions/upload-artifact@main
        with:
          name: version-name
          path: version_name.txt


